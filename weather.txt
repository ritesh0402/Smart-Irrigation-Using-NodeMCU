#include "DHTesp.h"
#define DHTpin 0    //D3 of NodeMCU is GPIO0
DHTesp dht;
#define rain 2   //D4 of nodemcu is GPIO 2
#include <SFE_BMP180.h>
SFE_BMP180 pressure;
float pressurevalue=0;
#include <Wire.h>
#include <ESP8266WiFi.h>
 
String apiKey = "";     //  Enter your Write API key from ThingSpeak

const char *ssid =  "";     // replace with your wifi ssid and wpa2 key
const char *pass =  "";
const char* server = "api.thingspeak.com";

WiFiClient client;


void setup()
{
   dht.setup(DHTpin, DHTesp::DHT11); //for DHT11 Connect DHT sensor to GPIO 17
       Serial.begin(115200);
       pinMode(rain,INPUT);
  if (pressure.begin())
    Serial.println("BMP180 init success");
  else
  {
    Serial.println("BMP180 init fail\n\n");
   while(1); // Pause forever.
  }
       delay(10);
       Serial.println("Connecting to ");
       Serial.println(ssid);
 
       WiFi.begin(ssid, pass);

     while (WiFi.status() != WL_CONNECTED)
     {
            delay(500);
            Serial.print(".");
     }
      Serial.println("");
      Serial.println("WiFi connected");
 
}
 
void loop()
{

 
 
delay(dht.getMinimumSamplingPeriod());

  float humidity = dht.getHumidity();
  float temperature = dht.getTemperature();
  Serial.print("temperature=");
  Serial.print(temperature);
  Serial.println(" *C");
  Serial.print("humidity");
  Serial.println(humidity);
  delay(500);
  char status;
  double T,P,p0,a;
       status = pressure.startPressure(3);
      if (status != 0)
      {
        delay(status);
        status = pressure.getPressure(P,T);
        if (status != 0)
        {
          pressurevalue=P*0.0145038;
          Serial.print("pressure=");
          Serial.print(pressurevalue,2);//prssure in psi  
          Serial.println(" psi");    
        }
     
        else Serial.println("error retrieving pressure measurement\n");
       }

  int rainvalue=digitalRead(rain);
  int rainstate;
  if(rainvalue==HIGH)
  {
     rainstate=0;
     Serial.print(rainstate);
     Serial.println("rain=0");
    }
  else 
  {
      rainstate=1;
      Serial.print(rainstate);
      Serial.println("rain=1");
    }
  delay(1000);  // Pause for 5 seconds.

                         if (client.connect(server,80))   //   "184.106.153.149" or api.thingspeak.com
                      {  
                             String postStr = apiKey;
                             postStr +="&field1=";
                             postStr += String(temperature);
                             postStr +="&field2=";
                             postStr += String(humidity);
                             postStr +="&field3=";
                             postStr += String(pressurevalue);
                             postStr +="&field4=";
                             postStr += String(rainstate);
                             postStr += "\r\n\r\n";
 
                             client.print("POST /update HTTP/1.1\n");
                             client.print("Host: api.thingspeak.com\n");
                             client.print("Connection: close\n");
                             client.print("X-THINGSPEAKAPIKEY: "+apiKey+"\n");
                             client.print("Content-Type: application/x-www-form-urlencoded\n");
                             client.print("Content-Length: ");
                             client.print(postStr.length());
                             client.print("\n\n");
                             client.print(postStr);
 
                           
                           
                        }
          client.stop();
 
          Serial.println("Waiting...");
 
  delay(5000);
}